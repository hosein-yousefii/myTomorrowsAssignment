name: Build Docker Image on Demand

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (BuildKit)
        uses: docker/setup-buildx-action@v3

      - name: Get the latest tag or create initial version
        id: tag
        run: |
          # Fetch all tags
          git fetch --tags
          # Get the latest tag, if available
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "none")
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Calculate the new version tag
        id: version
        run: |
          # If no tags exist, create a base version (e.g., v1.0.1)
          if [ "${{ env.LATEST_TAG }}" == "none" ]; then
            COMMIT_COUNT=$(git rev-list --count HEAD)
            NEW_TAG="v1.0.${COMMIT_COUNT}"
            echo "No tags found, starting with ${NEW_TAG}"
          else
            # Extract the numeric part of the latest tag (e.g., 25 from v1.2.25)
            VERSION_PARTS=(${LATEST_TAG//./ })
            TAG_MAJOR_MINOR="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}"  # Extract v1.2

            # Get the number of commits since the latest tag
            COMMITS_SINCE_TAG=$(git rev-list ${LATEST_TAG}..HEAD --count)

            # Calculate the new version based on commit count
            NEW_TAG="${TAG_MAJOR_MINOR}.$((COMMITS_SINCE_TAG + 1))"
          fi

          echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
          echo "Calculated new tag: ${NEW_TAG}"
          
      - name: Build Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --progress=plain \
            --tag my-app:${{ env.NEW_TAG }} \
            ./app
